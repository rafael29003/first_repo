import io
from string import capwords

from PIL import Image

import img
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, InputMediaPhoto
from keybords import *
import asyncio


from database import Database


TOKEN = "7295513375:AAGO3kyVVARa2tjlixWPDxYM_4sae8HJogI"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
bot = Bot(token=TOKEN)
dp = Dispatcher()
db = Database()


photo_url = "https://mebeloptovik.ru/wp-content/uploads/2023/06/img-tornadolab.png"




@dp.message(Command(commands=["start"]))
async def send_welcome(message: types.Message):
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    db.add_user(
        user_id=message.from_user.id,
        username=message.from_user.username,
        full_name=message.from_user.full_name
    )

    await message.answer("üè† –ú–µ–Ω—é", reply_markup=knopki_key)
    await bot.send_photo(
        chat_id=message.chat.id,
        photo=photo_url,
        caption="ü§ñ –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ!\n\n‚úÖ –°–æ–≤–µ—Ä—à–∞—è –ª—é–±–æ–µ –¥–µ–π—Å—Ç–≤–∏—è –≤ –±–æ—Ç–µ –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –Ω–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ \n\n‚ù§Ô∏è –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!",
        reply_markup=inline_kb1
    )


    @dp.message(F.text == "üóû –ó–∞–∫–∞–∑—ã")
    async def handle_news(message: types.Message):
        await message.answer("üì∞ –ù–æ–≤–æ—Å—Ç–∏ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ –Ω–∞—à–µ–º —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª–µ\n\ü§≥ @news_tornadolab")

    @dp.message(F.text == "üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞")
    async def handle_help(message: types.Message):
        await message.answer("üì© –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É\nüì± @support_dmitriy_bub")



@dp.message(F.text == "üè† –ú–µ–Ω—é")
async def handle_reviews(message: types.Message):
    await message.answer("üè† –ú–µ–Ω—é", reply_markup=knopki_key)
    await bot.send_photo(
        chat_id=message.chat.id,
        photo=photo_url,
        caption="ü§ñ –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ!\n\n‚úÖ –°–æ–≤–µ—Ä—à–∞—è –ª—é–±–æ–µ –¥–µ–π—Å—Ç–≤–∏—è –≤ –±–æ—Ç–µ –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –Ω–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ \n\n‚ù§Ô∏è –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!",
        reply_markup=inline_kb1  # –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    )


@dp.message(F.text == "üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞")
async def handle_help(message: types.Message):
    await message.answer("üì© –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É\nüì± @support_dmitriy_bub")

@dp.message(F.text == "‚òéÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç—ã")
async def handle_contacts(message: types.Message):
    await message.answer("üì® –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º –≤ telegram –∏–ª–∏ –ø–æ–∑–≤–æ–Ω–∏—Ç—å –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n\n –î–∏—Ä–µ–∫—Ç–æ—Ä –æ—Ç–¥–µ–ª–∞ –æ—Ñ–∏—Å–Ω–æ–π –º–µ–±–µ–ª–∏ –î–º–∏—Ç—Ä–∏–π –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á\nüì≤ @Dmitry_Bub \n\n–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º –ë—É–ª–∞—Ç –ò–ª—å–¥—É—Å–æ–≤–∏—á\nüá∑üá∫ +79872695433.")


@dp.callback_query(F.data.in_(["sait", "reviews", "assortment"]))
async def handle_buttons(callback_query: types.CallbackQuery):
    if callback_query.data == 'sait':
        new_caption = "–í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–µ—Ç–∏—Ç—å –Ω–∞—à —Å–∞–π—Ç –∏ –ø–æ—Å–º—Ç—Ä–µ—Ç—å –Ω–∞—à–∏ —Ä–∞–±–æ—Ç—ã –∞ —Ç–∞–∫ –∂–µ —É–≤–∏–¥–µ—Ç—å –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –∏ —Ç–∞–º"
        await bot.edit_message_media(
            chat_id=callback_query.message.chat.id,
            message_id=callback_query.message.message_id,
            media=InputMediaPhoto(media=photo_url),
            reply_markup=inline_podrobnee  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        )
    elif callback_query.data == 'reviews':
        await callback_query.answer("–í—ã –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É '–û—Ç–∑—ã–≤—ã'.")
    elif callback_query.data == 'assortment':
        await callback_query.answer("–í—ã –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É '–ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç'.")
        new_caption = ("–ü—Ä–∏–≤–µ—Ç —ç—Ç–æ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç")
        await bot.edit_message_media(
            chat_id=callback_query.message.chat.id,
            message_id=callback_query.message.message_id,
            media=InputMediaPhoto(media=photo_url, caption=new_caption),
            reply_markup=assortment_kb  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        )
@dp.callback_query(F.data.in_(["solo_zakaz", "himich_mebel", "ofice_mebel", "back" , "back2"]))
async def handle_assortment_options(callback_query: types.CallbackQuery):
    if callback_query.data == 'ofice_mebel':
        await bot.edit_message_media(
            chat_id=callback_query.message.chat.id,
            message_id=callback_query.message.message_id,
            media=InputMediaPhoto(media=photo_url),
            reply_markup=assortment_office_mebel # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        )
        await callback_query.answer()
    elif callback_query.data == 'himich_mebel':
        await bot.edit_message_media(
            chat_id=callback_query.message.chat.id,
            message_id=callback_query.message.message_id,
            media=InputMediaPhoto(media=photo_url),
            reply_markup=assortment_kb  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        )
        await callback_query.answer()
    elif callback_query.data == 'back':
        new_caption = ("ü§ñ –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ!\n\n‚úÖ –°–æ–≤–µ—Ä—à–∞—è –ª—é–±–æ–µ –¥–µ–π—Å—Ç–≤–∏—è –≤ –±–æ—Ç–µ –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –Ω–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ \n\n‚ù§Ô∏è –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!")
        await bot.edit_message_media(
            chat_id=callback_query.message.chat.id,
            message_id=callback_query.message.message_id,
            media=InputMediaPhoto(media=photo_url,caption=new_caption),
            reply_markup=inline_kb1

        )
        await callback_query.answer()
    elif callback_query.data == 'back2':
        await bot.edit_message_media(
            chat_id=callback_query.message.chat.id,
            message_id=callback_query.message.message_id,
            media=InputMediaPhoto(media=photo_url),
            reply_markup=assortment_kb
        )


        await callback_query.answer()

async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())